[{"C:\\Users\\User\\projects\\immunify\\src\\index.tsx":"1","C:\\Users\\User\\projects\\immunify\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\User\\projects\\immunify\\src\\reportWebVitals.ts":"3","C:\\Users\\User\\projects\\immunify\\src\\styles\\Theme.ts":"4","C:\\Users\\User\\projects\\immunify\\src\\App.tsx":"5","C:\\Users\\User\\projects\\immunify\\src\\store\\index.ts":"6","C:\\Users\\User\\projects\\immunify\\src\\store\\user\\action.ts":"7","C:\\Users\\User\\projects\\immunify\\src\\containers\\ReadyPage\\inedex.tsx":"8","C:\\Users\\User\\projects\\immunify\\src\\components\\Layout\\Layout.tsx":"9","C:\\Users\\User\\projects\\immunify\\src\\containers\\Reg\\Reg.tsx":"10","C:\\Users\\User\\projects\\immunify\\src\\store\\consts.ts":"11","C:\\Users\\User\\projects\\immunify\\src\\containers\\Calendar\\index.tsx":"12","C:\\Users\\User\\projects\\immunify\\src\\containers\\Profile\\index.tsx":"13","C:\\Users\\User\\projects\\immunify\\src\\containers\\Take\\index.tsx":"14","C:\\Users\\User\\projects\\immunify\\src\\containers\\Passport\\index.tsx":"15","C:\\Users\\User\\projects\\immunify\\src\\containers\\Region\\index.tsx":"16","C:\\Users\\User\\projects\\immunify\\src\\containers\\Profession\\index.tsx":"17","C:\\Users\\User\\projects\\immunify\\src\\containers\\Quiz\\index.tsx":"18","C:\\Users\\User\\projects\\immunify\\src\\containers\\Family\\index.tsx":"19","C:\\Users\\User\\projects\\immunify\\src\\containers\\UserData\\index.tsx":"20","C:\\Users\\User\\projects\\immunify\\src\\containers\\Diseas\\index.tsx":"21","C:\\Users\\User\\projects\\immunify\\src\\containers\\RegSuccess\\index.tsx":"22","C:\\Users\\User\\projects\\immunify\\src\\containers\\AddMember\\index.tsx":"23","C:\\Users\\User\\projects\\immunify\\src\\components\\SplashScreen\\index.tsx":"24","C:\\Users\\User\\projects\\immunify\\src\\store\\user\\index.ts":"25","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\AppButton\\index.tsx":"26","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\PageLayout\\index.tsx":"27","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\CardLink\\index.tsx":"28","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\DiseasCard\\index.tsx":"29","C:\\Users\\User\\projects\\immunify\\src\\utils\\Styels.ts":"30","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\Loader\\index.tsx":"31","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\UserCard\\index.tsx":"32","C:\\Users\\User\\projects\\immunify\\src\\components\\BackButton\\index.tsx":"33","C:\\Users\\User\\projects\\immunify\\src\\containers\\MemberInfo\\index.tsx":"34","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\ButtonGroup\\index.tsx":"35"},{"size":987,"mtime":1607423894891,"results":"36","hashOfConfig":"37"},{"size":5201,"mtime":1607422693399,"results":"38","hashOfConfig":"37"},{"size":440,"mtime":1607422693398,"results":"39","hashOfConfig":"37"},{"size":875,"mtime":1607432107045,"results":"40","hashOfConfig":"37"},{"size":4688,"mtime":1607428999851,"results":"41","hashOfConfig":"37"},{"size":228,"mtime":1607423894891,"results":"42","hashOfConfig":"37"},{"size":2218,"mtime":1607432087716,"results":"43","hashOfConfig":"37"},{"size":3369,"mtime":1607422693395,"results":"44","hashOfConfig":"37"},{"size":3991,"mtime":1607431801963,"results":"45","hashOfConfig":"37"},{"size":5169,"mtime":1607423894889,"results":"46","hashOfConfig":"37"},{"size":96,"mtime":1607427552234,"results":"47","hashOfConfig":"37"},{"size":177,"mtime":1607422693390,"results":"48","hashOfConfig":"37"},{"size":992,"mtime":1607422693393,"results":"49","hashOfConfig":"37"},{"size":161,"mtime":1607422693396,"results":"50","hashOfConfig":"37"},{"size":585,"mtime":1607422693392,"results":"51","hashOfConfig":"37"},{"size":2487,"mtime":1607422693396,"results":"52","hashOfConfig":"37"},{"size":1951,"mtime":1607422693392,"results":"53","hashOfConfig":"37"},{"size":6131,"mtime":1607422693394,"results":"54","hashOfConfig":"37"},{"size":2271,"mtime":1607432228916,"results":"55","hashOfConfig":"37"},{"size":1395,"mtime":1607423894889,"results":"56","hashOfConfig":"37"},{"size":7210,"mtime":1607423894888,"results":"57","hashOfConfig":"37"},{"size":2915,"mtime":1607426227084,"results":"58","hashOfConfig":"37"},{"size":4818,"mtime":1607431535253,"results":"59","hashOfConfig":"37"},{"size":903,"mtime":1607423894887,"results":"60","hashOfConfig":"37"},{"size":1036,"mtime":1607431874487,"results":"61","hashOfConfig":"37"},{"size":918,"mtime":1607422693386,"results":"62","hashOfConfig":"37"},{"size":851,"mtime":1607422693388,"results":"63","hashOfConfig":"37"},{"size":2578,"mtime":1607422693386,"results":"64","hashOfConfig":"37"},{"size":2912,"mtime":1607422693387,"results":"65","hashOfConfig":"37"},{"size":1243,"mtime":1607422693400,"results":"66","hashOfConfig":"37"},{"size":238,"mtime":1607422693388,"results":"67","hashOfConfig":"37"},{"size":2300,"mtime":1607422693389,"results":"68","hashOfConfig":"37"},{"size":1031,"mtime":1607422693385,"results":"69","hashOfConfig":"37"},{"size":1558,"mtime":1607432123945,"results":"70","hashOfConfig":"37"},{"size":738,"mtime":1607430345066,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"rnn6m8",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\projects\\immunify\\src\\index.tsx",[],["162","163"],"C:\\Users\\User\\projects\\immunify\\src\\serviceWorkerRegistration.js",[],["164","165"],"C:\\Users\\User\\projects\\immunify\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\styles\\Theme.ts",["166"],"C:\\Users\\User\\projects\\immunify\\src\\App.tsx",["167","168"],"C:\\Users\\User\\projects\\immunify\\src\\store\\index.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\store\\user\\action.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\containers\\ReadyPage\\inedex.tsx",["169"],"import react, { useState } from 'react';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport './readypage.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\n\r\ntype ReadyPageProps = {\r\n\r\n}\r\n\r\n\r\nexport const ReadyPage: React.FC<ReadyPageProps> = (props) => {\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const [vaccine, setVaccine] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n\r\n    // после ввода просто делаем переадресация на риски\r\n    return (\r\n        <PageLayout className=\"ready-page\">\r\n            <p className=\"ready-page__text\">Добавьте даные о вакцинах</p>\r\n            <FormControl variant=\"outlined\" fullWidth className={'ready-page__input'}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">вакцина</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={vaccine}\r\n                    onChange={(e) => setVaccine(Number(e.target.value))}\r\n                    inputProps={{\r\n                        name: 'region',\r\n                        id: 'filled-age-native-simple',\r\n                    }}\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={10}>БСЖ</option>\r\n                    <option value={20}>Спутник-5</option>\r\n                    <option value={30}>Вакцинушка</option>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" fullWidth className={'ready-page__input'}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">какая по счёту</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={count}\r\n                    onChange={(e) => setCount(Number(e.target.value))}\r\n                    inputProps={{\r\n                        name: 'region',\r\n                        id: 'filled-age-native-simple',\r\n                    }}\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={10}>1</option>\r\n                    <option value={20}>2</option>\r\n                    <option value={30}>3</option>\r\n                </Select>\r\n            </FormControl>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                <DatePicker\r\n                    label=\"дата последней вакцинации\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange as any}\r\n                    fullWidth\r\n                    cancelLabel=\"отмена\"\r\n                    format=\"d MMM yyyy\"\r\n                    disableFuture\r\n                    inputVariant=\"outlined\"\r\n                    clearable\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <AppButton floated>\r\n                Сохранить\r\n            </AppButton>\r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\Layout\\Layout.tsx",["170","171","172","173"],"C:\\Users\\User\\projects\\immunify\\src\\containers\\Reg\\Reg.tsx",["174","175","176"],"import react, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './reg.scss';\r\n\r\nimport { AppButton } from '../../components/UI/AppButton';\r\nimport { register } from '../../store/user/action';\r\nimport { RootState } from '../../store';\r\n\r\n\r\ntype RegProps = {\r\n\r\n\r\n    register: Function\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n    sexLabel: {\r\n        fontSize: 14\r\n    }\r\n});\r\n\r\nconst Reg: React.FC<RegProps> = ({\r\n    register\r\n}) => {\r\n    const [sex, setSex] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        age: '',\r\n        sex: ''\r\n    });\r\n    const clasess = useStyle();\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (loading) return;\r\n\r\n        let valid = true;\r\n        const errors = {\r\n            name: '',\r\n            age: '',\r\n            sex: ''\r\n        }\r\n\r\n        // валидация\r\n        if (name.length < 2) {\r\n            errors.name = 'имя должно быть не короче 2 символов';\r\n            valid = false;\r\n        }\r\n        if (+age < 1 || +age > 150) {\r\n            errors.age = 'возраст обязателен';\r\n            valid = false;\r\n        }\r\n        if (!sex) {\r\n            errors.sex = 'пол обязателен';\r\n            valid = false;\r\n        }\r\n\r\n        if (valid) {\r\n            register(name, +age, sex)\r\n                .then((r: any) => {\r\n                    if (r) {\r\n                        history.push('/reg/success');\r\n                    }\r\n                })\r\n                .catch((e: any) => {\r\n                    console.log(e);\r\n                });\r\n        } else {\r\n            setErrors(errors);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"reg\">\r\n            <div className=\"reg__container\">\r\n                <h1 className=\"reg__title\">\r\n                    Добро пожаловать\r\n                    в Immunify\r\n                </h1>\r\n                <p className=\"reg__desc\">\r\n                    Узнайте каким рискам вы подвержены и устраните их\r\n                </p>\r\n\r\n                <form className=\"reg__form\" onSubmit={handleSubmit}>\r\n                    <Typography color=\"error\">{errors.name}</Typography>\r\n                    <TextField\r\n                        label=\"как вас зовут?\"\r\n                        variant=\"outlined\"\r\n                        className=\"reg__input\"\r\n                        id=\"name-input\"\r\n                        value={name}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)} />\r\n\r\n                    <Typography color=\"error\">{errors.age}</Typography>\r\n                    <TextField\r\n                        label=\"сколько вам лет?\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        className=\"reg__input\"\r\n                        id=\"age-input\"\r\n                        value={age}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAge(e.target.value)}\r\n                    />\r\n\r\n                    <p>ваш пол?</p>\r\n                    <Typography color=\"error\">{errors.sex}</Typography>\r\n                    <RadioGroup row name=\"position\" onChange={(e) => setSex(e.target.value)} value={sex}>\r\n                        <FormControlLabel\r\n                            control={<Radio color=\"primary\" />}\r\n                            value=\"man\"\r\n                            label=\"мужчина\"\r\n                            classes={{\r\n                                label: clasess.sexLabel\r\n                            }}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Radio color=\"primary\" />}\r\n                            value=\"woman\"\r\n                            label=\"женщина\"\r\n                            classes={{\r\n                                label: clasess.sexLabel\r\n                            }}\r\n                        />\r\n                    </RadioGroup>\r\n                    <AppButton disabled={loading} type=\"submit\" className=\"reg_start\">\r\n                        Начать\r\n                    </AppButton>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n});\r\nconst mapDispatchToProps = {\r\n    register\r\n}\r\nconst connectedReg = connect(mapStateToProps, mapDispatchToProps)(Reg);\r\nexport { connectedReg as Reg };","C:\\Users\\User\\projects\\immunify\\src\\store\\consts.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\containers\\Calendar\\index.tsx",["177"],"import react from 'react';\r\n\r\ntype CalendarProps = {\r\n\r\n}\r\n\r\nexport const Calendar: React.FC<CalendarProps> = (props) => {\r\n return (\r\n  <div>\r\n      calendar\r\n  </div>\r\n );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Profile\\index.tsx",["178","179","180","181"],"import react from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport './profile.scss';\r\n\r\nimport { CardLink } from '../../components/UI/CardLink';\r\nimport { s } from '../../utils/Styels';\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\n\r\ntype ProfileProps = {\r\n\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    padding: 5\r\n  }\r\n});\r\n\r\nexport const Profile: React.FC<ProfileProps> = (props) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <PageLayout>\r\n      <CardLink\r\n        title=\"Данные\"\r\n        subTitle=\"ваши данные\"\r\n        to=\"/profile/data\"\r\n        status=\"error\"\r\n        statusLabel=\"не все данные указаны\"\r\n      />\r\n\r\n      <CardLink\r\n        title=\"Семья\"\r\n        subTitle=\"данные вашей семьи\"\r\n        to=\"/profile/family\"\r\n        status=\"success\"\r\n        statusLabel=\"всё хорошо\"\r\n      />\r\n    </PageLayout>\r\n  );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Take\\index.tsx",["182"],"import react from 'react';\r\n\r\ntype TakeProps = {\r\n\r\n}\r\n\r\nexport const Take: React.FC<TakeProps> = (props) => {\r\n return (\r\n  <div>\r\n      take\r\n  </div>\r\n );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Passport\\index.tsx",["183"],"import react from 'react';\r\n\r\nimport { DiseasCard } from '../../components/UI/DiseasCard';\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\n\r\ntype PassportProps = {\r\n\r\n}\r\n\r\nexport const Passport: React.FC<PassportProps> = (props) => {\r\n return (\r\n  <PageLayout>\r\n      <DiseasCard to={'/passport/:id'} name=\"Гепатит В\" risks={['high', 'high', 'low']} />\r\n      <DiseasCard to={'/passport/:id'} name=\"Корь\" risks={['low', 'high', 'low']} />\r\n      <DiseasCard to={'/passport/:id'} name=\"Грипп\" risks={['low', 'medium', 'low']} />\r\n  </PageLayout>\r\n );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Region\\index.tsx",["184"],"import react, { useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport './region.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\n\r\n\r\ntype RegionProps = {\r\n\r\n}\r\n\r\nexport const Region: React.FC<RegionProps> = (props) => {\r\n    const [otherWork, setOtherWork] = useState(false);\r\n    const [region, setRegion] = useState('');\r\n\r\n    return (\r\n        <PageLayout className=\"region-page\">\r\n            <h4 className=\"region-page__title\">В каком регионе Вы проживаете?</h4>\r\n\r\n            <FormControl variant=\"outlined\" fullWidth className={'region-page__region'}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">Выбирите регион</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={region}\r\n                    onChange={(e) => setRegion(String(e.target.value))}\r\n                    inputProps={{\r\n                        name: 'region',\r\n                        id: 'filled-age-native-simple',\r\n                    }}\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={10}>Южный федеральный округ 1</option>\r\n                    <option value={20}>Южный федеральный округ 2</option>\r\n                    <option value={30}>Южный федеральный округ 3</option>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControlLabel className=\"region-page__work\"\r\n                control={\r\n                    <Checkbox\r\n                        checked={otherWork}\r\n                        onChange={(e) => setOtherWork(e.target.checked)}\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Я работаю в другом регионе\"\r\n            />\r\n\r\n            <div  className=\"region-page__btns\">\r\n                <AppButton className=\"region-page__save\" color=\"default\">отмена</AppButton>\r\n                <AppButton className=\"region-page__save\">сохранить</AppButton>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Profession\\index.tsx",["185","186","187"],"import react, { useState } from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport './region.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\n\r\n\r\ntype ProfessionProps = {\r\n\r\n}\r\n\r\nexport const Profession: React.FC<ProfessionProps> = (props) => {\r\n    const [otherWork, setOtherWork] = useState(false);\r\n    const [region, setRegion] = useState('');\r\n\r\n    return (\r\n        <PageLayout className=\"profession-page\">\r\n            <h4 className=\"region-page__title\">Чем вы занимаетесь?</h4>\r\n\r\n            <FormControl variant=\"outlined\" fullWidth className={'region-page__region'}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">выбирите деятельность</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={region}\r\n                    onChange={(e) => setRegion(String(e.target.value))}\r\n                    inputProps={{\r\n                        name: 'region',\r\n                        id: 'filled-age-native-simple',\r\n                    }}\r\n                >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    <option value={10}>Мясник 1</option>\r\n                    <option value={20}>Мясник 2</option>\r\n                    <option value={30}>Мясник 3</option>\r\n                    <option value={40}>Инжинер конструктор</option>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <div className=\"region-page__btns\">\r\n                <AppButton className=\"region-page__save\" color=\"default\">отмена</AppButton>\r\n                <AppButton className=\"region-page__save\">сохранить</AppButton>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Quiz\\index.tsx",["188","189","190","191","192","193"],"import react, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './quiz.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\n\r\ntype QuizProps = {\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    notice: {\r\n        color: theme.palette.error.main\r\n    }\r\n}));\r\n\r\nconst quizData = [\r\n    {\r\n        question: 'Что Вы думаете о войне во Вьетнаме?',\r\n        answers: [{ text: 'да', id: 1 }, { text: 'нет', id: 2 }, { text: 'смотря кто спрашивает', id: 3 }],\r\n        id: 1\r\n    },\r\n    {\r\n        question: 'Сколько пальцев на ноге?',\r\n        answers: [{ text: 'сложно', id: 4 }, { text: '10', id: 5 }, { text: '5', id: 6 }],\r\n        id: 2\r\n    },\r\n    {\r\n        question: 'Небо какого цвета?',\r\n        answers: [{ text: 'красное', id: 7 }, { text: 'зелёное', id: 8 }, { text: 'голубое', id: 9 }],\r\n        id: 3\r\n    },\r\n    {\r\n        question: 'Какой год сегодня?',\r\n        answers: [{ text: '2019', id: 10 }, { text: '2020', id: 11 }, { text: '2021', id: 12 }],\r\n        id: 4\r\n    },\r\n    {\r\n        question: 'Солнце это звезда?',\r\n        answers: [{ text: 'нет', id: 13 }, { text: 'да', id: 14 }, { text: 'планета', id: 15 }],\r\n        id: 5\r\n    }\r\n]\r\n\r\ntype QuizState = {\r\n    currentStep: number\r\n    userAnswers: UserAnswer[]\r\n}\r\ntype UserAnswer = {\r\n    questionId: number\r\n    answerId: number\r\n}\r\nexport const Quiz: React.FC<QuizProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [quiz, setQuiz] = useState<QuizState>({\r\n        userAnswers: [],\r\n        currentStep: 0\r\n    });\r\n    const [selectedAnswer, setSelectedAnswer] = useState(0);\r\n    const quizQuestions = quizData;\r\n    const quizProgress = quiz.userAnswers.length / quizQuestions.length * 100;\r\n    const isNotCurrentAnswer = !Boolean(quiz.userAnswers[quiz.currentStep]) && !selectedAnswer;\r\n    const currentQuestion = quizQuestions[quiz.currentStep];\r\n\r\n\r\n    const setAnswer = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        setSelectedAnswer(window.parseInt(value));\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if (quiz.currentStep >= quizQuestions.length) return;\r\n        const lastUserAnswers = quiz.userAnswers;\r\n        const prevAnswer = quiz.userAnswers[quiz.currentStep + 1];\r\n        lastUserAnswers[quiz.currentStep] = {\r\n            questionId: currentQuestion.id,\r\n            answerId: selectedAnswer\r\n        };\r\n\r\n        if (prevAnswer) {\r\n            setSelectedAnswer(prevAnswer.answerId);\r\n        } else {\r\n            setSelectedAnswer(0);\r\n        }\r\n\r\n        setQuiz({\r\n            currentStep: quiz.currentStep + 1,\r\n            userAnswers: [...lastUserAnswers]\r\n        });\r\n    }\r\n\r\n    const backQuestion = () => {\r\n        if (quiz.currentStep == 0) return;\r\n\r\n        const prevAnswer = quiz.userAnswers[quiz.currentStep - 1];\r\n\r\n        if (prevAnswer) {\r\n            setSelectedAnswer(prevAnswer.answerId);\r\n        } else {\r\n            setSelectedAnswer(0);\r\n        }\r\n\r\n        setQuiz({\r\n            ...quiz,\r\n            currentStep: quiz.currentStep - 1\r\n        });\r\n    }\r\n\r\n    const finishQuiz = () => {\r\n        if (quiz.currentStep >= quizQuestions.length) return;\r\n        const lastUserAnswers = quiz.userAnswers;\r\n        lastUserAnswers[quiz.currentStep] = {\r\n            questionId: currentQuestion.id,\r\n            answerId: selectedAnswer\r\n        };\r\n\r\n        setQuiz({\r\n            ...quiz,\r\n            userAnswers: [...lastUserAnswers]\r\n        });\r\n        console.log(quiz);\r\n    }\r\n\r\n    return (\r\n        <PageLayout className=\"quiz-page\">\r\n            <LinearProgress variant=\"determinate\" value={quizProgress} />\r\n            <p>вопрос {`${quiz.currentStep + 1}/${quizQuestions.length}`}</p>\r\n            { isNotCurrentAnswer && (<p className={classes.notice}>ответьте на этот вопрос</p>)}\r\n            <h3 className=\"quiz-page__question\">{currentQuestion.question}</h3>\r\n\r\n            <FormControl component=\"fieldset\" color=\"primary\">\r\n                <FormLabel component=\"legend\">ответ</FormLabel>\r\n                <RadioGroup\r\n                    aria-label=\"answer\"\r\n                    name=\"gender1\"\r\n                    value={selectedAnswer}\r\n                    onChange={setAnswer}>\r\n                    {currentQuestion.answers.map((answer) => (\r\n                        <FormControlLabel key={answer.id} value={answer.id} control={<Radio color=\"primary\" />} label={answer.text} />\r\n                    ))}\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n            <div className=\"region-page__btns\">\r\n                <AppButton\r\n                    onClick={backQuestion}\r\n                    className=\"region-page__save\"\r\n                    disabled={quiz.currentStep == 0}\r\n                    color=\"default\">назад</AppButton>\r\n\r\n                {!(quiz.currentStep + 1 == quizQuestions.length) && <AppButton\r\n                    onClick={nextQuestion}\r\n                    className=\"region-page__save\"\r\n                    disabled={isNotCurrentAnswer || quiz.currentStep + 1 == quizQuestions.length}\r\n                    color=\"primary\">далее</AppButton>}\r\n\r\n                {quiz.currentStep + 1 == quizQuestions.length && <AppButton\r\n                    onClick={finishQuiz}\r\n                    className=\"region-page__save\"\r\n                    disabled={isNotCurrentAnswer}\r\n                    color=\"primary\">завершить</AppButton>}\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Family\\index.tsx",["194","195","196","197"],"C:\\Users\\User\\projects\\immunify\\src\\containers\\UserData\\index.tsx",["198"],"import react from 'react';\r\nimport { CardLink } from '../../components/UI/CardLink';\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\n\r\ntype UserDataProps = {\r\n\r\n}\r\n\r\nexport const UserData: React.FC<UserDataProps> = (props) => {\r\n    return (\r\n        <PageLayout>\r\n            <CardLink\r\n                title=\"Пройти опрос\"\r\n                subTitle=\"Ответьте на несколько вопросов, чтобы узнать о возможных рисках\"\r\n                to=\"/profile/data/quiz\"\r\n            />\r\n\r\n            <CardLink\r\n                title=\"Выбрать профессию\"\r\n                subTitle=\"Укажите род деятельности, чтобы узнать возможный профессиональный риск\"\r\n                to=\"/profile/data/profession\"\r\n            />\r\n\r\n            <CardLink\r\n                title=\"Указать регион\"\r\n                subTitle=\"Укажите регион  проживания, чтобы узнатьэпидемиологическую обстановку\"\r\n                to=\"/profile/data/region\"\r\n            />\r\n\r\n            <CardLink\r\n                title=\"Ник и ключ доступа\"\r\n                subTitle=\"информация о вас\"\r\n                to=\"/profile/data/region\"\r\n            />\r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\Diseas\\index.tsx",["199"],"import react, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './diseas.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\nimport { Loader } from '../../components/UI/Loader';\r\n\r\n\r\ntype DiseasProps = {\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 5\r\n    },\r\n    paper: {\r\n        backgroundColor: '#c4ffc5',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        borderRadius: 5,\r\n        position: 'relative',\r\n        maxWidth: 580\r\n    },\r\n    closer: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        top: 15,\r\n        color: '#a0a0a0'\r\n    },\r\n    card: {\r\n        margin: '5px 0'\r\n    },\r\n    more: {\r\n        color: '#08f',\r\n        position: 'absolute',\r\n        right: 5,\r\n        bottom: 10,\r\n\r\n        '& svg': {\r\n            verticalAlign: 'middle'\r\n        }\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 500,\r\n        textAlign: 'center',\r\n        margin: '10px 0'\r\n    }\r\n}));\r\n\r\nconst diseas = {\r\n    name: 'Гипатит В',\r\n    about: 'это инфекционное заболевание печени, вызванное вирусом гепатита типа B. Острая (активная) стадия гепатита В развивается в течение первых 6 месяцев после заражения вирусной инфекцией и может протекать как в очень легкой форме, практически бессимптомно, так и в тяжелой вплоть до госпитализации.',\r\n    vaccines: `Все современные вакцины для профилактики вирусного гепатита В производятся с использованием генно-инженерной`,\r\n    signs: `Постоянная тошнота Быстрая утомляемость Появление болей в суставах Лихорадка`\r\n}\r\nexport const Diseas: React.FC<DiseasProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [openAbout, setOpenAbout] = useState(false);\r\n    const [openVaccines, setOpenVaccines] = useState(false);\r\n    const [openSigns, setOpenSigns] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // тут могла быть ваша загрузка данных\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 1000);\r\n    }, []);\r\n\r\n    if (loading) return (\r\n        <PageLayout className=\"diseas-page\">\r\n            <h3 className={classes.title}>Идёт загрузка данных</h3>\r\n            <Loader />\r\n        </PageLayout>\r\n    );\r\n\r\n    return (\r\n        <PageLayout className=\"diseas-page\">\r\n            <h3 className={classes.title}>{diseas.name}</h3>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenAbout(true)}>\r\n                    <h2>Что это?</h2>\r\n                    <p>{diseas.about.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openAbout}\r\n                    onClose={() => setOpenAbout(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openAbout}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Что это?</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.about}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenAbout(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenVaccines(true)}>\r\n                    <h2>Какие есть вакцины?</h2>\r\n                    <p>{diseas.vaccines.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openVaccines}\r\n                    onClose={() => setOpenVaccines(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openVaccines}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Какие есть вакцины?</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.vaccines}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenVaccines(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenSigns(true)}>\r\n                    <h2 >Признаки</h2>\r\n                    <p>{diseas.signs.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openSigns}\r\n                    onClose={() => setOpenSigns(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openSigns}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Признаки</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.signs}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenSigns(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <Link to=\"/passport/ready\"><AppButton floated> Я привит </AppButton></Link> \r\n        </PageLayout>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\RegSuccess\\index.tsx",[],"C:\\Users\\User\\projects\\immunify\\src\\containers\\AddMember\\index.tsx",["200","201"],"C:\\Users\\User\\projects\\immunify\\src\\components\\SplashScreen\\index.tsx",[],"C:\\Users\\User\\projects\\immunify\\src\\store\\user\\index.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\AppButton\\index.tsx",["202"],"import react from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { sif } from '../../../utils/Styels';\r\n\r\ntype AppButtonProps = {\r\n    [p: string]: any\r\n    floated?: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 45\r\n    },\r\n    floated: {\r\n        position: 'fixed',\r\n        bottom: 75,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n        width: 160\r\n    }\r\n}));\r\n\r\nexport const AppButton: React.FC<AppButtonProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            classes={{\r\n                root: sif({[classes.root]: true, [classes.floated]: Boolean(props.floated) })\r\n            }}\r\n            {...props}>\r\n            {props.children}\r\n        </Button>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\PageLayout\\index.tsx",["203"],"import react from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './pageLayout.scss';\r\n\r\nimport { s } from '../../../utils/Styels';\r\nimport { BackButton } from '../../BackButton';\r\n\r\ntype PageLayoutProps = {\r\n    [p: string]: any\r\n    ButtonBackto?: string\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        padding: 5\r\n    }\r\n});\r\n\r\nexport const PageLayout: React.FC<PageLayoutProps> = ({\r\n    ButtonBackto,\r\n    children,\r\n    ...props\r\n}) => {\r\n    const classes = useStyle(props);\r\n\r\n    return (\r\n        <div className={s(\"page-layout\", props.className)}>\r\n            <BackButton to={ButtonBackto} />\r\n            <Paper elevation={6} className={s(classes.root, 'page-layout__content')}>\r\n                {children}\r\n            </Paper>\r\n        </div>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\CardLink\\index.tsx",["204","205","206"],"import react from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport { sif } from '../../../utils/Styels';\r\n\r\ntype CardLinkProps = {\r\n    title: string\r\n    subTitle?: string\r\n    status?: \"success\" | \"error\"\r\n    statusLabel?: string\r\n    to: string\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 15,\r\n        paddingRight: 60,\r\n        margin: '5px 0',\r\n        position: 'relative'\r\n    },\r\n    rootLink: {\r\n        textDecoration: 'none'\r\n    },\r\n    arrow: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        bottom: '0',\r\n        margin: 'auto 0',\r\n        right: '15px',\r\n        width: 24,\r\n        height: 24,\r\n\r\n        '& svg': {\r\n            color: '#ACACAC'\r\n        }\r\n    },\r\n    title: {\r\n        fontSize: 24\r\n    },\r\n    status: {\r\n        position: 'absolute',\r\n        top: 2,\r\n        right: 5,\r\n        color: theme.palette.error.main\r\n    },\r\n    statusCuccess: {\r\n        color: theme.palette.success.main\r\n    },\r\n    statusIcon: {\r\n        paddingBottom: 3\r\n    },\r\n    statusLabel: {\r\n        verticalAlign: \"top\"\r\n    }\r\n}));\r\n\r\nexport const CardLink: React.FC<CardLinkProps> = ({\r\n    title,\r\n    subTitle,\r\n    to,\r\n    status,\r\n    statusLabel\r\n}) => {\r\n    const classes = useStyle();\r\n    let StatusIcon = (<ClearIcon className={classes.statusIcon} />);\r\n    if (status == 'success') StatusIcon = (<CheckIcon className={classes.statusIcon} />);\r\n    const isStatus = !!status;\r\n\r\n    return (\r\n        <Link className={classes.rootLink} to={to}>\r\n            <Paper classes={{\r\n                root: classes.root\r\n            }}>\r\n                <p className={classes.title}>{title}</p>\r\n                <p>{subTitle}</p>\r\n                <div className={classes.arrow}>\r\n                    <ArrowForwardIosIcon />\r\n                </div>\r\n\r\n                {isStatus &&\r\n                    <div\r\n                        className={sif({\r\n                            [classes.status]: true,\r\n                            [classes.statusCuccess]: status == 'success'\r\n                        })}\r\n                    >\r\n                        <span className={classes.statusLabel}>{statusLabel}</span>\r\n                        {StatusIcon}\r\n                    </div>}\r\n            </Paper>\r\n        </Link>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\DiseasCard\\index.tsx",["207"],"import react from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { s } from '../../../utils/Styels';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype riskString = \"low\" | \"medium\" | \"high\"\r\ntype DiseasCardProps = {\r\n    risks: riskString[]\r\n    name: string\r\n    to: string\r\n}\r\n\r\nconst useStyels = makeStyles({\r\n    rootLink: {\r\n        textDecoration: 'none'\r\n    },\r\n    root: {\r\n        padding: 5,\r\n        margin: '5px 0'\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 500\r\n    },\r\n    line: {\r\n        display: 'flex',\r\n        marginBottom: 10\r\n    },\r\n    lineRisk: {\r\n        height: 3,\r\n        flexGrow: 1,\r\n        marginRight: 5\r\n    },\r\n    lineRiskLast: {\r\n        marginRight: 0\r\n    },\r\n    riskCalculated: {\r\n        float: 'right'\r\n    },\r\n    green: {\r\n        backgroundColor: '#3BCF1A'\r\n    },\r\n    red: {\r\n        backgroundColor: '#FF003D'\r\n    },\r\n    yellow: {\r\n        backgroundColor: '#FFB800'\r\n    },\r\n    greenT: {\r\n        color: '#3BCF1A'\r\n    },\r\n    redT: {\r\n        color: '#FF003D'\r\n    },\r\n    yellowT: {\r\n        color: '#FFB800'\r\n    }\r\n});\r\n\r\nconst riskLabels = {\r\n    'low': 'низкий',\r\n    'medium': 'умеренный',\r\n    'high': 'высокий',\r\n}\r\n\r\nconst riskBackgroundColors = {\r\n    'low': 'green',\r\n    'medium': 'yellow',\r\n    'high': 'red',\r\n}\r\nconst riskColors = {\r\n    'low': 'greenT',\r\n    'medium': 'yellowT',\r\n    'high': 'redT',\r\n}\r\n\r\nexport const DiseasCard: React.FC<DiseasCardProps> = ({\r\n    risks,\r\n    name,\r\n    to\r\n}) => {\r\n    const classes = useStyels();\r\n    const personRisk = risks[0];\r\n    const profRisk = risks[1];\r\n    const epicRisk = risks[2];\r\n\r\n    return (\r\n        <Link className={classes.rootLink} to={to}>\r\n            <Paper classes={{ root: classes.root }}>\r\n                <p className={classes.title}>{name}</p>\r\n                <div className={classes.line}>\r\n                    <div className={classes.lineRisk + ' ' + (classes as any)[riskBackgroundColors[personRisk]]}></div>\r\n                    <div className={classes.lineRisk + ' ' + (classes as any)[riskBackgroundColors[profRisk]]}></div>\r\n                    <div className={s(classes.lineRisk, classes.lineRiskLast, (classes as any)[riskBackgroundColors[epicRisk]])}></div>\r\n                </div>\r\n                <div>Личная защита <span className={s(classes.riskCalculated, (classes as any)[riskColors[personRisk]])}>{riskLabels[personRisk]}</span></div>\r\n\r\n                <div>Проф. риск <span className={s(classes.riskCalculated, (classes as any)[riskColors[profRisk]])}>{riskLabels[profRisk]}</span></div>\r\n\r\n                <div>Эпид обстановка <span className={s(classes.riskCalculated, (classes as any)[riskColors[epicRisk]])}>{riskLabels[epicRisk]}</span></div>\r\n            </Paper>\r\n        </Link>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\utils\\Styels.ts",[],"C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\Loader\\index.tsx",["208"],"import react from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\ntype LoaderProps = {\r\n\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = (props) => {\r\n return (\r\n  <LinearProgress color=\"primary\" />\r\n );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\UserCard\\index.tsx",["209"],"import react from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {sif} from '../../../utils/Styels';\r\n\r\ntype UserCardProps = {\r\n    title: string\r\n    subtitle: string\r\n    avatarLetters: string\r\n    to: string\r\n    active?: boolean\r\n    progress: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 5\r\n    },\r\n    rootLink: {\r\n        margin: '8px 0',\r\n        textDecoration: 'none',\r\n        display: 'block'\r\n    },\r\n    content: {\r\n        display: 'flex'\r\n    },\r\n    progress: {\r\n        width: '48px !important',\r\n        marginBottom: '-3px',\r\n        marginTop: 3\r\n    },\r\n    avatarBlock: {\r\n        position: 'relative',\r\n        paddingRight: 15\r\n    },\r\n    avatarImg: {\r\n        position: 'absolute',\r\n        top: 2,\r\n        left: 7,\r\n        width: 42,\r\n        height: 42\r\n    },\r\n    text: {\r\n        flexGrow: 1\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 500\r\n    },\r\n    age: {\r\n        fontSize: 18\r\n    },\r\n    active: {\r\n        border: `1px solid ${theme.palette.primary.main}`\r\n    }\r\n}));\r\n\r\nexport const UserCard: React.FC<UserCardProps> = ({\r\n    title,\r\n    subtitle,\r\n    avatarLetters,\r\n    to,\r\n    active,\r\n    progress\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Link to={to} className={classes.rootLink}>\r\n            <Paper classes={{ root: sif({[classes.root]: true, [classes.active]: Boolean(active)}) }}>\r\n                <div className={classes.content}>\r\n                    <div className={classes.avatarBlock}>\r\n                        <CircularProgress classes={{root: classes.progress}} variant=\"determinate\" value={progress} />\r\n                        <Avatar classes={{root: classes.avatarImg}}>{avatarLetters}</Avatar>\r\n                    </div>\r\n                    <div className={classes.text}>\r\n                        <p className={classes.title}>{title}</p>\r\n                        <p className={classes.age}>{subtitle}</p>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Link>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\components\\BackButton\\index.tsx",["210","211"],"import react from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\ntype BackButtonProps = {\r\n    to?: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textDecoration: 'none',\r\n        color: '#333'\r\n    },\r\n    text: {\r\n        verticalAlign: 'super'\r\n    },\r\n    icon: {\r\n        color: '#aeaeae',\r\n        paddingTop: 3\r\n    }\r\n});\r\n\r\nexport const BackButton: React.FC<BackButtonProps> = ({to}) => {\r\n    const locationData = useLocation();\r\n    const pathNames = locationData.pathname.split('/').slice(1);\r\n    const pathToBack = '/' + pathNames.slice(0, -1).join('/');\r\n    const classes = useStyles();\r\n\r\n    if(pathToBack == '/') return null;\r\n\r\n    return (\r\n        <Link to={to || pathToBack} className={classes.root}>\r\n            <ChevronLeftIcon className={classes.icon} />\r\n            <span className={classes.text}> назад</span>\r\n        </Link>\r\n    );\r\n};","C:\\Users\\User\\projects\\immunify\\src\\containers\\MemberInfo\\index.tsx",["212"],"C:\\Users\\User\\projects\\immunify\\src\\components\\UI\\ButtonGroup\\index.tsx",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":26,"nodeType":"219","messageId":"220","endLine":1,"endColumn":31},{"ruleId":"217","severity":1,"message":"221","line":41,"column":13,"nodeType":"219","messageId":"220","endLine":41,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":47,"column":6,"nodeType":"224","endLine":47,"endColumn":8,"suggestions":"225"},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"227","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"228","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"217","severity":1,"message":"229","line":17,"column":10,"nodeType":"219","messageId":"220","endLine":17,"endColumn":14},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"230","line":7,"column":22,"nodeType":"219","messageId":"220","endLine":7,"endColumn":30},{"ruleId":"217","severity":1,"message":"231","line":36,"column":21,"nodeType":"219","messageId":"220","endLine":36,"endColumn":31},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"232","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":15},{"ruleId":"217","severity":1,"message":"233","line":8,"column":10,"nodeType":"219","messageId":"220","endLine":8,"endColumn":11},{"ruleId":"217","severity":1,"message":"234","line":22,"column":9,"nodeType":"219","messageId":"220","endLine":22,"endColumn":16},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"235","line":17,"column":12,"nodeType":"219","messageId":"220","endLine":17,"endColumn":21},{"ruleId":"217","severity":1,"message":"236","line":17,"column":23,"nodeType":"219","messageId":"220","endLine":17,"endColumn":35},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":101,"column":30,"nodeType":"239","messageId":"240","endLine":101,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":156,"column":48,"nodeType":"239","messageId":"240","endLine":156,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":159,"column":41,"nodeType":"239","messageId":"240","endLine":159,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":162,"column":74,"nodeType":"239","messageId":"240","endLine":162,"endColumn":76},{"ruleId":"237","severity":1,"message":"238","line":165,"column":39,"nodeType":"239","messageId":"240","endLine":165,"endColumn":41},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"234","line":27,"column":11,"nodeType":"219","messageId":"220","endLine":27,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":35,"column":30,"nodeType":"239","messageId":"240","endLine":35,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":45,"column":31,"nodeType":"239","messageId":"240","endLine":45,"endColumn":33},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"230","line":7,"column":22,"nodeType":"219","messageId":"220","endLine":7,"endColumn":30},{"ruleId":"217","severity":1,"message":"231","line":37,"column":21,"nodeType":"219","messageId":"220","endLine":37,"endColumn":31},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":71,"column":16,"nodeType":"239","messageId":"240","endLine":71,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":89,"column":61,"nodeType":"239","messageId":"240","endLine":89,"endColumn":63},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"226","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":31,"column":19,"nodeType":"239","messageId":"240","endLine":31,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":27,"column":53,"nodeType":"239","messageId":"240","endLine":27,"endColumn":55},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"@typescript-eslint/no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'userInitReq' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInit'. Either include it or remove the dependency array. If 'userInit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["243"],"'react' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'User' is defined but never used.","'useTheme' is defined but never used.","'setLoading' is assigned a value but never used.","'Paper' is defined but never used.","'s' is defined but never used.","'classes' is assigned a value but never used.","'otherWork' is assigned a value but never used.","'setOtherWork' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},"Update the dependencies array to be: [userInit]",{"range":"246","text":"247"},[1503,1505],"[userInit]"]