[{"D:\\УчёбаНовая\\frameworks\\immunify\\src\\App.tsx":"1","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Family\\index.tsx":"2","D:\\УчёбаНовая\\frameworks\\immunify\\src\\components\\UI\\AppButton\\index.tsx":"3","D:\\УчёбаНовая\\frameworks\\immunify\\src\\components\\BackButton\\index.tsx":"4","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Take\\index.tsx":"5","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Region\\index.tsx":"6","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Diseas\\index.tsx":"7","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Quiz\\index.tsx":"8","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Calendar\\index.tsx":"9","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\UserData\\index.tsx":"10"},{"size":3029,"mtime":1607030036267,"results":"11","hashOfConfig":"12"},{"size":1215,"mtime":1607030036277,"results":"13","hashOfConfig":"12"},{"size":918,"mtime":1607030036269,"results":"14","hashOfConfig":"12"},{"size":1031,"mtime":1607030036267,"results":"15","hashOfConfig":"12"},{"size":161,"mtime":1607030036295,"results":"16","hashOfConfig":"12"},{"size":2487,"mtime":1607030036294,"results":"17","hashOfConfig":"12"},{"size":7186,"mtime":1607030036276,"results":"18","hashOfConfig":"12"},{"size":6131,"mtime":1607030036291,"results":"19","hashOfConfig":"12"},{"size":177,"mtime":1607030036275,"results":"20","hashOfConfig":"12"},{"size":1193,"mtime":1607030036295,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fhokv7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\УчёбаНовая\\frameworks\\immunify\\src\\App.tsx",[],["48","49"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Family\\index.tsx",["50","51"],"import react from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './family.scss';\r\n\r\nimport { AppButton } from '../../components/UI/AppButton';\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { UserCard } from '../../components/UI/UserCard';\r\n\r\ntype FamilyProps = {\r\n\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n});\r\n\r\nexport const Family: React.FC<FamilyProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <PageLayout className=\"family-page\">\r\n            <p className=\"family-page__description\">Введите данные о членах вашей семьи, чтобы застраховать их от возможных осложнений</p>\r\n            <Link to=\"/\"><AppButton floated className=\"family-page__add\">добавить</AppButton></Link>\r\n\r\n            <UserCard active progress={10} title=\"Степанов Сергей\" subtitle=\"15лет\" to=\"/profile/family/id\" avatarLetters=\"СС\" />\r\n            <UserCard progress={100} title=\"Степанов Андрей\" subtitle=\"45лет\" to=\"/profile/family/id\" avatarLetters=\"СА\" />\r\n        </PageLayout>\r\n    );\r\n};",["52","53"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\components\\UI\\AppButton\\index.tsx",["54"],"import react from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport { sif } from '../../../utils/Styels';\r\n\r\ntype AppButtonProps = {\r\n    [p: string]: any\r\n    floated?: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 45\r\n    },\r\n    floated: {\r\n        position: 'fixed',\r\n        bottom: 75,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n        width: 160\r\n    }\r\n}));\r\n\r\nexport const AppButton: React.FC<AppButtonProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            classes={{\r\n                root: sif({[classes.root]: true, [classes.floated]: Boolean(props.floated) })\r\n            }}\r\n            {...props}>\r\n            {props.children}\r\n        </Button>\r\n    );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify\\src\\components\\BackButton\\index.tsx",["55","56"],"import react from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\ntype BackButtonProps = {\r\n    to?: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textDecoration: 'none',\r\n        color: '#333'\r\n    },\r\n    text: {\r\n        verticalAlign: 'super'\r\n    },\r\n    icon: {\r\n        color: '#aeaeae',\r\n        paddingTop: 3\r\n    }\r\n});\r\n\r\nexport const BackButton: React.FC<BackButtonProps> = ({to}) => {\r\n    const locationData = useLocation();\r\n    const pathNames = locationData.pathname.split('/').slice(1);\r\n    const pathToBack = '/' + pathNames.slice(0, -1).join('/');\r\n    const classes = useStyles();\r\n\r\n    if(pathToBack == '/') return null;\r\n\r\n    return (\r\n        <Link to={to || pathToBack} className={classes.root}>\r\n            <ChevronLeftIcon className={classes.icon} />\r\n            <span className={classes.text}> назад</span>\r\n        </Link>\r\n    );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Take\\index.tsx",["57"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Region\\index.tsx",["58"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Diseas\\index.tsx",["59"],"import react, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './diseas.scss';\r\n\r\nimport { PageLayout } from '../../components/UI/PageLayout';\r\nimport { AppButton } from '../../components/UI/AppButton';\r\nimport { Loader } from '../../components/UI/Loader';\r\n\r\n\r\ntype DiseasProps = {\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 5\r\n    },\r\n    paper: {\r\n        backgroundColor: '#c4ffc5',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        borderRadius: 5,\r\n        position: 'relative'\r\n    },\r\n    closer: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        top: 15,\r\n        color: '#a0a0a0'\r\n    },\r\n    card: {\r\n        margin: '5px 0'\r\n    },\r\n    more: {\r\n        color: '#08f',\r\n        position: 'absolute',\r\n        right: 5,\r\n        bottom: 10,\r\n\r\n        '& svg': {\r\n            verticalAlign: 'middle'\r\n        }\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 500,\r\n        textAlign: 'center',\r\n        margin: '10px 0'\r\n    }\r\n}));\r\n\r\nconst diseas = {\r\n    name: 'Гипатит В',\r\n    about: 'это инфекционное заболевание печени, вызванное вирусом гепатита типа B. Острая (активная) стадия гепатита В развивается в течение первых 6 месяцев после заражения вирусной инфекцией и может протекать как в очень легкой форме, практически бессимптомно, так и в тяжелой вплоть до госпитализации.',\r\n    vaccines: `Все современные вакцины для профилактики вирусного гепатита В производятся с использованием генно-инженерной`,\r\n    signs: `Постоянная тошнота Быстрая утомляемость Появление болей в суставах Лихорадка`\r\n}\r\nexport const Diseas: React.FC<DiseasProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [openAbout, setOpenAbout] = useState(false);\r\n    const [openVaccines, setOpenVaccines] = useState(false);\r\n    const [openSigns, setOpenSigns] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // тут могла быть ваша загрузка данных\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), 1000);\r\n    }, []);\r\n\r\n    if (loading) return (\r\n        <PageLayout className=\"diseas-page\">\r\n            <h3 className={classes.title}>Идёт загрузка данных</h3>\r\n            <Loader />\r\n        </PageLayout>\r\n    );\r\n\r\n    return (\r\n        <PageLayout className=\"diseas-page\">\r\n            <h3 className={classes.title}>{diseas.name}</h3>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenAbout(true)}>\r\n                    <h2>Что это?</h2>\r\n                    <p>{diseas.about.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openAbout}\r\n                    onClose={() => setOpenAbout(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openAbout}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Что это?</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.about}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenAbout(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenVaccines(true)}>\r\n                    <h2>Какие есть вакцины?</h2>\r\n                    <p>{diseas.vaccines.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openVaccines}\r\n                    onClose={() => setOpenVaccines(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openVaccines}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Какие есть вакцины?</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.vaccines}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenVaccines(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <div className={classes.paper + ' ' + classes.card} onClick={() => setOpenSigns(true)}>\r\n                    <h2 >Признаки</h2>\r\n                    <p>{diseas.signs.slice(0, 100) + '...'}</p>\r\n                    <div className={classes.more}>подробнее <ArrowRightAltIcon /></div>\r\n                </div>\r\n                <Modal\r\n                    className={classes.modal}\r\n                    open={openSigns}\r\n                    onClose={() => setOpenSigns(false)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={openSigns}>\r\n                        <div className={classes.paper}>\r\n                            <h2 id=\"transition-modal-title\">Признаки</h2>\r\n                            <p id=\"transition-modal-description\">{diseas.signs}</p>\r\n                            <ClearIcon classes={{ root: classes.closer }} onClick={() => setOpenSigns(false)} />\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n\r\n            <Link to=\"/passport/ready\"><AppButton floated> Я привит </AppButton></Link> \r\n        </PageLayout>\r\n    );\r\n};","D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Quiz\\index.tsx",["60","61","62","63","64","65"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\Calendar\\index.tsx",["66"],"D:\\УчёбаНовая\\frameworks\\immunify\\src\\containers\\UserData\\index.tsx",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":20,"column":11,"nodeType":"74","messageId":"75","endLine":20,"endColumn":18},{"ruleId":"68","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":31,"column":19,"nodeType":"81","messageId":"82","endLine":31,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":101,"column":30,"nodeType":"81","messageId":"82","endLine":101,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":156,"column":48,"nodeType":"81","messageId":"82","endLine":156,"endColumn":50},{"ruleId":"79","severity":1,"message":"80","line":159,"column":41,"nodeType":"81","messageId":"82","endLine":159,"endColumn":43},{"ruleId":"79","severity":1,"message":"80","line":162,"column":74,"nodeType":"81","messageId":"82","endLine":162,"endColumn":76},{"ruleId":"79","severity":1,"message":"80","line":165,"column":39,"nodeType":"81","messageId":"82","endLine":165,"endColumn":41},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.",["83"],["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]